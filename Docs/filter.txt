Filters are applied in one of two ways.

Slice mode where only items of the correct type are looked at and
the hierarchy needed to support that item is included.

Hier mode where the Hierarcy is looked at top down and each item in sorted order
is looked at for filtering.

Default Level:
	project|actions (depends on report)

Filters:

any:	any item (including list types)
all:	any non "list" type

list:	any "list" type
hier:	any "value/vision/role/goal/project"
task:	any "action"

live:	

next:	types that have is_nextAtion tagged (default actions)
someday: types that have is_someday tagged (default actions)
maybe: (same as someday)

wait	waiting on
tickle	has a tickle on
late	has a due date that has passed
due	has a due date in the near (default 7 days) future
done:	has a completed date (actions|projects)

slow
idea
plan	hier items without children (default projets)

---------------------------------------------------------------------------
Category/Context/Timeframe/Tags filtering...
---------------------------------------------------------------------------
	return (\&filter_any, '=', '*')	if $word =~ /^any/i;
	return (\&filter_any, '=', '=')	if $word =~ /^all/i;
	return (\&filter_any, '=', 'l')	if $word =~ /^list/i;
	return (\&filter_any, '=', 'h')	if $word =~ /^hier/i;
	return (\&filter_any, '=', 't')	if $word =~ /^task/i;


	return (\&filter_done, '>','')	if $word =~ /^done/i;
	return (\&filter_some, '>','')	if $word =~ /^some/i;
	return (\&filter_some, '>','')	if $word =~ /^maybe/i;

	return (\&filter_next, '<','')	if $word =~ /^next/i;
	return (\&filter_task, '<','')	if $word =~ /^action/i;

	return (\&filter_wait, '<','')	if $word =~ /^wait/i;
	return (\&filter_wait, '<','')	if $word =~ /^tickle/i;
	return (\&filter_late, '<','')	if $word =~ /^late/i;
	return (\&filter_due,  '<','')	if $word =~ /^due/i;

	return (\&filter_slow, '<','')	if $word =~ /^slow/i;
	return (\&filter_idea, '<','')	if $word =~ /^idea/i;
	return (\&filter_plan, '<','')	if $word =~ /^plan/i;

	return (\&filter_live, '<','')	if $word =~ /^live/i;
	return (\&filter_dead, '<','')	if $word =~ /^dead/i;

---------------------------------------------------------------------------

actions	 meta_filter('+next', '^focus', 'detail');
addplans meta_filter('+live', '^focus', 'simple');
bulklist meta_filter('+live', '^title', 'bulk');
doit	 meta_filter('+live', '^doitdate', 'simple');
dump	 meta_filter('+any', 'tid', 'dump');	
focus	 meta_filter('+next', '^focus', 'simple');
fook	 meta_filter('+live', '^title', 'simple');
gui	 meta_filter('+all', 'tid', 'simple');
hierlist meta_filter('+live', 'title', 'simple');
hier	 meta_filter('+live', '^title', 'none');
items	 meta_filter('+any', '^title', 'item');	
list	 meta_filter('+live', '^title', 'title');
nextactions	meta_filter('+next', '^title', 'none');
noop	 meta_filter('+live', 'tid', 'simple');
oocalc	 meta_filter('+live', 'tid', 'none');
planner	 meta_filter('+all', '^tid', 'none');
projects	#meta_filter('+next', '^focus', 'rgpa');
projects	meta_filter('+next', '^focus', 'simple');
purge	 meta_filter('+dead', '^tid', 'simple');
records	 meta_filter('+any', '^tid', 'record');
review	 meta_filter('+live', '^doitdate', 'simple');
review	 meta_filter('+wait');
review	 meta_filter('+live', '^doit', 'doit');
search	 meta_filter('+all', '^title', 'simple');
spreadsheet meta_filter('+live', '^tid', 'none');
status	meta_filter("+live", '^tid', 'none');	
taskjuggler meta_filter('+all', '^focus', 'none');
taskjuggler meta_filter('+live', '^focus', 'none');
tasks	 meta_filter('+live', 'title', 'task');	# Actions
todo	 meta_filter('+live', '^priority', 'priority');

