
== Bugs ==

* review needs to use new prompt logic

* renumber doesn't update tid
** renumber a project then edit it.

* new needs to combine all the difference kinds into one routine
** new needs a what to prompt for list by type
** new needs to export it ability to bulkload


== Enhancements ==

* renumber a tid... needs to renumber tid and its children

* entering a list (L)

* entering a checklist (C)

* entering a checklist/list item (T)

* checklist/list items need to be able to form a true hierarchy

* entering a Reference

* mode switching (ie type) for Action/Inbox/Wait

* maybe depends should be integrated with wait.
** depend's parent can be list of actions/project waiting on?

== Tagged Bugs ==

CT.pm:		warn "###BUG### Can't insert $key => $val\n";
CCT.pm:		warn "###BUG### Can't update $key => $val\n";
CCT.pm:	###BUG### $CCT->name is horibly expensive
CCT.pm:	die "###BUG### Can't rename $key => $newname\n";
Tasks.pm:	###BUG### need to reflect back database changed.
Tasks.pm:		###BUG### reload database
Report/new.pm:	###BUG### make this fast and simple.
Report/review.pm:my($List) = 0; ###BUG### should be an option
Report/actions.pm:		###BUG### should walk down from here vi get_children
Report/actions.pm:		###BUG### rather walk up in has_parent
Report/help.pm:		###BUG### should look at other args for perldoc args
Report/rc.pm:	###BUG### this should call ff and have it
Report/url.pm:	###BUG### this should't be hard wired.
Filter.pm:	###BUG### propigate done upward
Format.pm:	###BUG### handle missing keys from @Ordered
Format.pm:	###BUG### handle missing keys from @Ordered
Sort.pm:#	###BUG### fetch command line option sort override
Sort.pm:	###BUG### make by_Sort an eval?
Db.pm:			###BUG### we need to create it?

== Old Tagged Bugs ==

Test-Plan.txt:[_] CCT.pm:	warn "###BUG### Can't insert $key => $val\n";
Test-Plan.txt:[_] CCT.pm:	warn "###BUG### Can't update $key => $val\n";
Test-Plan.txt:[_] CCT.pm: 	###BUG### $CCT->name is horibly expensive
Test-Plan.txt:[_] CCT.pm: 	die "###BUG### Can't rename $key => $newname\n";
Test-Plan.txt:[_] db.pm:	###BUG### we need to create it?
Test-Plan.txt:[_] db.pm:	###BUG### we need to create it?
Test-Plan.txt:[_] Sort.pm:	###BUG### fetch command line option sort override
Test-Plan.txt:[_] Sort.pm:	###BUG### make by_Sort an eval?
Test-Plan.txt:[_] Sort.pm:	###BUG### junk sub need to walk to hier
Test-Plan.txt:[_] Report/actions.pm:	###BUG### should walk down from here via get_children
Test-Plan.txt:[_] Report/actions.pm:	###BUG### rather walk up in has_parent
Test-Plan.txt:[_] Report/doit.pm:	my($List) = 0; ###BUG### should be an option
Test-Plan.txt:[_] Report/dump.pm:	###BUG### handle missing keys from @Ordered
Test-Plan.txt:[_] Report/edit.pm:	###BUG### handle missing keys from @Ordered (see Report/dump.pm)
Test-Plan.txt:[_] Report/new.pm:	###BUG### make this fast and simple.
Test-Plan.txt:[_] Report/purge.pm:	###BUG### walk forward stopping on excludes
Test-Plan.txt:[_] Report/purge.pm:	###BUG### walk backward keeping on includes
Test-Plan.txt:[_] Report/review.pm: my($List) = 0; ###BUG### should be an option
Test-Plan.txt:[_] Report/review.pm: my($Done) = 0; ###BUG### should be an option

Bugs:../db.pm:			###BUG### we need to create it?
Bugs:../Sort.pm:	###BUG### fetch command line option sort override
Bugs:../Sort.pm:	###BUG### make by_Sort an eval?
Bugs:../Sort.pm:	###BUG### junk sub need to walk to hier
Bugs:../Report/actions.pm:		###BUG### should walk down from here vi get_children
Bugs:../Report/actions.pm:		###BUG### rather walk up in has_parent
Bugs:../Report/doit.pm:my($List) = 0; ###BUG### should be an option
Bugs:../Report/dump.pm:	###BUG### handle missing keys from @Ordered
Docs/Bugs:../Report/edit.pm:		###BUG### handle missing keys from @Ordered (see Report/dump.pm)
Bugs:../Report/new.pm:	###BUG### make this fast and simple.
Bugs:../Report/purge.pm:###BUG### walk forward stopping on excludes
Bugs:../Report/purge.pm:###BUG### walk backward keeping on includes
Bugs:../Report/review.pm:my($List) = 0; ###BUG### should be an option
Bugs:../Report/review.pm:my($Done) = 0; ###BUG### should be an option


== Fixed ==

* Hier::Prompt needs to be writeen
* rc needs to use new prompt logic
* bulkload needs to use new prompt logic

